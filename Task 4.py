# -*- coding: utf-8 -*-
"""Untitled43.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QXuRrVq3F9wLFaMGcAJHL5wMtL_FArgc
"""



import sqlite3

def create_database():
    # Connect to SQLite database (it will create the database file if it doesn't exist)
    conn = sqlite3.connect(':memory:')  # Using in-memory database for simplicity

    # Create a cursor object
    cursor = conn.cursor()

    # Create a sample table
    cursor.execute('''
    CREATE TABLE users (
        id INTEGER PRIMARY KEY,
        name TEXT,
        age INTEGER,
        email TEXT
    )
    ''')

    # Commit the changes
    conn.commit()
    return conn, cursor

def create_user(cursor, conn, name, age, email):
    cursor.execute('''
    INSERT INTO users (name, age, email) VALUES (?, ?, ?)
    ''', (name, age, email))
    conn.commit()
    print(f"User {name} created successfully.")
    print("")  # Add a line space

def read_users(cursor):
    cursor.execute('SELECT * FROM users')
    users = cursor.fetchall()
    for user in users:
        print(user)
    print("")  # Add a line space

def update_user(cursor, conn, user_id, name=None, age=None, email=None):
    if name:
        cursor.execute('UPDATE users SET name = ? WHERE id = ?', (name, user_id))
    if age:
        cursor.execute('UPDATE users SET age = ? WHERE id = ?', (age, user_id))
    if email:
        cursor.execute('UPDATE users SET email = ? WHERE id = ?', (email, user_id))
    conn.commit()
    print(f"User with id {user_id} updated successfully.")
    print("")  # Add a line space

def delete_user(cursor, conn, user_id):
    cursor.execute('DELETE FROM users WHERE id = ?', (user_id,))
    conn.commit()
    print(f"User with id {user_id} deleted successfully.")
    print("")  # Add a line space

def main():
    conn, cursor = create_database()

    # Create users
    create_user(cursor, conn, 'mavra', 20, 'mavra@gmail.com')
    create_user(cursor, conn, 'mavrasarfra', 25, 'asd@gmail.com')

    # Read users
    print("Enter user values:")
    read_users(cursor)

    # Update a user
    update_user(cursor, conn, 1, age=22)

    # Read users again to see the update
    print("After update:")
    read_users(cursor)

    # Delete a user
    delete_user(cursor, conn, 2)

    # Read users again to see the deletion
    print("After deletion:")
    read_users(cursor)

    # Close the connection
    conn.close()

if __name__ == "__main__":
    main()